
алгоритм генерации:

for ( от первой группы до последней )
	
{
    
		int idGroup = 
    for(от первого предмета до последнего для указанной группы )
    
		{
	
			1. запоминаем(needHours) сколько часов необходимо этого предмета
	
			2. ищем в таблице timetable по выбранному предмету id преподавателя
	если не удалось найти то
	выбираем список преподавателей который могут вести этот предмет 
	
	
			for(от первого до последнего преподавателя для указанной группы и указанного предмета)
	
			{
	    
				1. проверяем достаточно ли у преподавателя часов для ведения данного предмета 
	    если не достаточно то переходим к следующему (данные берем из timetable)
	    
	    
				2. получаем список times_days упорядоченный по days (что бы не получилось 5 пар математики подряд)
	
	    
				int nHours = 0; - счетчик 
	    
	    
				for(от первого до последнего пары в рассписании : days_times)
	    
				{
		
					если ( nHours >= needHours) то переходим к следующему предмету(!!!)
		
					1. проверяем свободна ли аудитория в это время
		
					2. проверям свободен ли преподаватель в это время
		
					3. проверям свободна ли группа в это время
		если ( 1 и 2 и 3 были выполнены) то делаем запись в timetable
	    
				}
	
			}
    
		}

	}
